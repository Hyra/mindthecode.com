---
title: Getting your React Native App on an iOS device
description: >-
  As I was playing around with the awesome React Native library I encountered a
  few small hicups getting an app running on an actual device, so here's how I
  made it work for me.
tags:
  - react
  - react-native
  - react native
  - ios
  - mobile
  - xcode
layout: post
header: react_native.gif
date: 2015-10-08
---

As I was playing around with the awesome React Native library I encountered a few small hicups getting an app running on an actual device, so here's how I made it work for me.

<div class="teaser" style="background-image: url(/images/headers/{{header}})"></div>

At the time of writing I've tested the following with:

- OSX
- react-native 0.11.4
- nodejs v4.1.1
- XCode 7.0.1

I won't go into much detail on how to get a React Native project going on your computer, as the nice guys at Facebook do an excellent job [explaining this process](https://facebook.github.io/react-native/docs/getting-started.html#content).

After you've opened your initial project (generated by `react-native init <your-project>`) in XCode you can run it on the simulator to verify it compiles and runs correctly.

Now, to get the app on your iPhone the documentation will want you to do the following:

1. Open `AwesomeApp/ios/AwesomeApp/AppDelegate.m`
2. Change the IP in the URL from localhost to your laptop's IP

This was not enough in my and my colleagues case. Additionally, you will want to do the following:

1. Select the project in the navigator pane
2. Go to the Build Settings tab
3. Search for `Dead Code Stripping` and set it to `NO`

Once that's done you should be able to select your phone as build target and press "Build and run".

Of course, when you want to make a final build which doesn't require the device to be on the same WiFi as the computer you are serving the bundle.js file of off there's more steps, but with the above we could get Live Reloading on an actual device to work.

Happy Coding.
